
plugins {
    id 'war'
}

dependencies {
    compile "org.springframework:spring-webmvc:4.0.7.RELEASE"

    compile "org.springframework:spring-jdbc:4.0.7.RELEASE"
    compile "org.postgresql:postgresql:9.4-1200-jdbc41"

    compile "org.hibernate:hibernate-validator:5.0.1.Final"
    compile "org.apache.commons:commons-lang3:3.1"

    compile 'org.slf4j:slf4j-api:1.5.6'

    compile 'org.springframework.security:spring-security-core:4.1.0.RELEASE'
    compile 'org.springframework.security:spring-security-web:4.1.0.RELEASE'
    compile 'org.springframework.security:spring-security-config:4.1.0.RELEASE'
    compile 'org.springframework.security:spring-security-taglibs:4.1.0.RELEASE'

    compile 'org.thymeleaf:thymeleaf-spring4:2.1.4.RELEASE'
    compile "javax.servlet:jstl:1.2"
    providedCompile "javax.servlet:javax.servlet-api:3.1.0"
    providedCompile "javax.servlet.jsp:jsp-api:2.1"
    providedCompile "javax.el:javax.el-api:2.2.4"

    providedCompile "com.github.jsimone:webapp-runner:8.0.30.2"

    testCompile "junit:junit-dep:4.11"
    testCompile "org.springframework:spring-test:4.0.7.RELEASE"
    testCompile "org.mockito:mockito-core:1.9.5"
    testCompile "org.hamcrest:hamcrest-library:1.3"
}

repositories {
    mavenCentral()
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}

war.baseName = rootProject.name

task copyTomcat(type: Copy) {
    into "$buildDir/tomcat/"
    rename('(.+)-.+\\.jar','$1\\.jar')
    from configurations.providedCompile.filter {
        it.getName().contains('webapp-runner')
    }
}

tasks['build'].dependsOn(copyTomcat)

task runTomcat(type: JavaExec) {

    dependsOn copyTomcat
    dependsOn war

    main = "webapp.runner.launch.Main"
    classpath = files("$buildDir/tomcat/webapp-runner.jar")
    args=["$buildDir/libs/web-store.war"]
    workingDir = projectDir
}

task stage {
    dependsOn build
    dependsOn copyTomcat
}

task cleanTreash () {
    dependsOn clean
    delete 'out', 'build', 'target', 'classes'
}

tasks['test'].enabled=false;
