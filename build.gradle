
plugins {
    id 'war'
    id 'jetty'
    id "jp.empressia.glassfish" version "0.2.5"
}

dependencies {
    compile "org.springframework:spring-webmvc:$springVersion"
    compile "org.springframework:spring-jdbc:$springVersion"
    compile "org.postgresql:postgresql:$postgresqlVercion"

    compile "org.hibernate:hibernate-validator:$hibernateValidatorVersion"
    compile "org.apache.commons:commons-lang3:$commonsLangVersion"

    compile 'org.slf4j:slf4j-api:1.5.6'

    compile "org.thymeleaf:thymeleaf-spring3:$thymeleafVersion"
    compile "javax.servlet:jstl:$jstlVersion"
    providedCompile "javax.servlet:javax.servlet-api:$servletApiVersion"
    providedCompile "javax.servlet.jsp:jsp-api:$jspApiVersion"
    providedCompile "javax.el:javax.el-api:$jspElVersion"

    providedCompile "com.github.jsimone:webapp-runner:8.0.30.2"

    testCompile "junit:junit-dep:$junitVersion"
    testCompile "org.springframework:spring-test:$springVersion"
    testCompile "org.mockito:mockito-core:$mockitoVersion"
    testCompile "org.hamcrest:hamcrest-library:$hamcrestVersion"
}

repositories {
    maven { url 'http://maven.springframework.org/release' }
    maven { url 'http://maven.springframework.org/milestone' }
    maven { url 'http://maven.springframework.org/snapshot' }
    maven { url 'http://download.java.net/maven/2' }
    mavenCentral()
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}

war.baseName = rootProject.name

glassfish {
    homeDirectoryPath =  "$glassfishHome" ;
}

/*glassfish4
    //For more information about Exec tasks see http://www.gradle.org/docs/current/dsl/org.gradle.api.tasks.Exec.html
    task run(dependsOn: 'war', type:Exec){
        workingDir "/home/v/Programs/glassfish4/bin"
        commandLine "./asadmin"
        args "deploy", "--force=true", "${war.archivePath}"
}*/

task copyTomcat(type: Copy) {
    into "$buildDir/tomcat/"
    rename('(.+)-.+\\.jar','$1\\.jar')
    from configurations.providedCompile.filter {
        it.getName().contains('webapp-runner')
    }
}

tasks['build'].dependsOn(copyTomcat)

task runTomcat(type: JavaExec) {

    dependsOn copyTomcat
    dependsOn war

    main = "webapp.runner.launch.Main"
    classpath = files("$buildDir/tomcat/webapp-runner.jar")
    args=["$buildDir/libs/web-store.war"]
    workingDir = projectDir
}